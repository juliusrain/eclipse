- online game

- pros
	- networking requirement easily satisfied
	- language "easier" to deal with
	- works with browsers (OS independent - take that, Microsoft!)
	- can be just as complex - easily offer equal workload
	- different!
	- opportunity for extra features
		- install/disk-less play
		- player accounts
		- live multiplayer
		- in-game messaging
		- high scores listing
	- instant online demonstration
- cons
	- not C++, which is considered "a plus" by game companies
	- must learn one or two other languages (javascript, PHP or python or java for backend, SQL)
	- would probably pay ~$20 for a web host/domain

- client
	- loads game
	- connects to server
	- processes gameplay
	- renders graphics
- server
	- stores game
	- stores database of player accounts
		- username
		- password
		- email
		- admin level
		- character details
			- appearance
			- inventory (?)
			- current score
		- history/log
	- receives and transmits player actions
	- receives and transmits player messages

- possible game ideas
	- "island survivor" / "settler"
		- collect resources
		- build camp
		- fend off wild animals
		- attack/help other camps
		- stay alive
	- "amazing race"
		- race from point A to point B
		- stops along the way
			- mini-games!
			- collect items
		- (a la Mario)
	- "planet-makers"
		- play god
		- build galactic empire
	- planetary/medival conquest game
		- send ships, or player is in a flagship
		- develop technology
		- conquer planets
		- collect resources
		- "transport networks" (graph/map)
		- start on a homeplanet, spread out
	- amazon/yukon/oregon/safari trail game
		- similar to the race game
		- have vital stats to maintain
	- edutainment game
		- play AND learn!
		- answer questions/solve problems to get points/items for a quest
	- scavenger hunt
		- many rooms
			- dynamically generated by combining different elements
		- search for clues/items







